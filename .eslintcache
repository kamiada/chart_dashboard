[{"/Users/adriannak/Desktop/chart_dashboard/src/index.js":"1","/Users/adriannak/Desktop/chart_dashboard/src/reportWebVitals.js":"2","/Users/adriannak/Desktop/chart_dashboard/src/App.jsx":"3","/Users/adriannak/Desktop/chart_dashboard/src/components/Subpage.jsx":"4","/Users/adriannak/Desktop/chart_dashboard/src/components/Barchart.jsx":"5","/Users/adriannak/Desktop/chart_dashboard/src/components/Header.jsx":"6"},{"size":500,"mtime":1611833290850,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1611833290850,"results":"9","hashOfConfig":"8"},{"size":3912,"mtime":1611943934576,"results":"10","hashOfConfig":"8"},{"size":1215,"mtime":1611833290849,"results":"11","hashOfConfig":"8"},{"size":991,"mtime":1611833290849,"results":"12","hashOfConfig":"8"},{"size":255,"mtime":1611833290849,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"59sh11",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/adriannak/Desktop/chart_dashboard/src/index.js",[],["29","30"],"/Users/adriannak/Desktop/chart_dashboard/src/reportWebVitals.js",[],"/Users/adriannak/Desktop/chart_dashboard/src/App.jsx",["31"],"import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Barchart from \"./components/Barchart\";\nimport Subpage from \"./components/Subpage\";\nimport \"./components/components.scss\";\nimport euStaticData from \"./EUcovidData.json\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFilters: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.addSelectedFilters = this.addSelectedFilters.bind(this);\n    this.getCountries = this.getCountries.bind(this);\n  }\n  getCountries() {\n    let results = [];\n    euStaticData.records.forEach((item) => {\n      if (!results.some(entry => entry.value === item.countriesAndTerritories)) {\n        results.push({ label: item.countriesAndTerritories, value: item.countriesAndTerritories});\n      }\n    });\n    return results;\n  };\n  getNumbOfDeathsPerMonth = (filter_where, array) => {\n    let results = [];\n    array.forEach((item) => {\n      if (item.countriesAndTerritories === filter_where) {\n        results.push(item.deaths_weekly);\n      }\n    });\n    return results;\n  };\n  handleChange = (selectedMonth) => {\n    this.setState({ selectedMonth }, () =>\n      console.log(`Option selected:`, this.state.selectedMonth)\n    );\n  };\n  addSelectedFilters(value){\n    this.setState({ selectedFilters: [...value] });\n    console.log(this.state.selectedFilters);\n  }\n  submit(){\n\n  }\n  render() {\n    const { selectedFilters} = this.state;\n    const countries = this.getCountries();\n\n    const animatedComponents = makeAnimated();\n    const months = [\n      { label: \"January\", value: 1 },\n      { label: \"February\", value: 2 },\n      { label: \"March\", value: 3 },\n      { label: \"April\", value: 4 },\n      { label: \"May\", value: 5 },\n      { label: \"June\", value: 6 },\n      { label: \"July\", value: 7 },\n      { label: \"August\", value: 8 },\n      { label: \"September\", value: 9 },\n      { label: \"October\", value: 10 },\n      { label: \"November\", value: 11 },\n      { label: \"December\", value: 12 },\n    ];\n    const years = [\n      { label: \"2020\", value: 2020 },\n      { label: \"2021\", value: 2021 },\n    ];\n    const parameters = [\n      {label: 'Number of cases', value: \"cases_weekly\"},\n      {label: 'Number of deaths', value: \"deaths_weekly\"}\n    ]\n    return (\n      <div>\n        <Header />\n        <Subpage />\n        <div className=\"container-dropdown\">\n          {/* parameters: number of cases (monthly), number of deaths (monthly) */}\n        <Select\n          closeMenuOnSelect={true}\n          components={animatedComponents}\n          isMulti\n          options={parameters}\n          onChange={this.addSelectedFilters}\n        />\n        {/* country */}\n        <Select\n          closeMenuOnSelect={false}\n          components={animatedComponents}\n          isMulti\n          options={countries}\n          onChange={this.addSelectedFilters}\n        />\n        {/* month */}\n        <Select\n          closeMenuOnSelect={false}\n          components={animatedComponents}\n          isMulti\n          options={months}\n          onChange={this.addSelectedFilters}\n        />\n        {/* year */}\n        <Select\n          closeMenuOnSelect={true}\n          components={animatedComponents}\n          isMulti\n          options={years}\n          onChange={this.addSelectedFilters}\n        />\n        <button className=\"submit_btn\" onClick={this.submit}>\n          Search\n        </button>\n        </div>\n        <div className=\"container\">\n          {this.state.data && this.state.data.length > 0 ? (\n            <div>\n              <Barchart\n                label=\"Number of casess\"\n                data={this.state.data.cases_weekly}\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/adriannak/Desktop/chart_dashboard/src/components/Subpage.jsx",[],"/Users/adriannak/Desktop/chart_dashboard/src/components/Barchart.jsx",[],"/Users/adriannak/Desktop/chart_dashboard/src/components/Header.jsx",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":51,"column":13,"nodeType":"40","messageId":"41","endLine":51,"endColumn":28},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'selectedFilters' is assigned a value but never used.","Identifier","unusedVar",["44"],["45"],"no-global-assign","no-unsafe-negation"]